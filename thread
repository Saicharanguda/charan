// C program to demonstrates the 
// use of threads and memory 
// consistency errors 
#include <pthread.h> 
#include <stdio.h> 

// Global variable shared by all threads 
int shared_var = 0; 

// Function executed by the first thread 
void* thread_func1(void* arg) 
{ 
	// Increment the shared variable by 1 
	shared_var++; 

	// Print the value of the shared variable 
	printf("Thread 1: shared_var = %d\n", shared_var); 

	return NULL; 
} 

// Function executed by the second thread 
void* thread_func2(void* arg) 
{ 
	// Increment the shared variable by 1 
	shared_var++; 

	// Print the value of the shared variable 
	printf("Thread 2: shared_var = %d\n", shared_var); 

	return NULL; 
} 

int main(int argc, char* argv[]) 
{ 
	pthread_t thread1, thread2; 

	// Create the first thread 
	if (pthread_create(&thread1, NULL, thread_func1, NULL) 
		!= 0) { 
		fprintf(stderr, "Error creating thread 1\n"); 
		return 1; 
	} 

	// Create the second thread 
	if (pthread_create(&thread2, NULL, thread_func2, NULL) 
		!= 0) { 
		fprintf(stderr, "Error creating thread 2\n"); 
		return 1; 
	} 

	// Wait for the threads to finish 
	if (pthread_join(thread1, NULL) != 0) { 
		fprintf(stderr, "Error joining thread 1\n"); 
		return 1; 
	} 
	if (pthread_join(thread2, NULL) != 0) { 
		fprintf(stderr, "Error joining thread 2\n"); 
		return 1; 
	} 

	return 0; 
}
